plugins {
    id 'com.matyrobbrt.mc.registrationutils' version "${previous_minecraft_version}-${registration_utils_version}"
}

registrationUtils {
    group 'dev.thomasglasser.sherdsapi.registration'
    projects {
        Fabric { type 'fabric' } // The fabric project
        Forge { type 'forge' } // The forge project
        Common { type 'common' } // The common project
    }
}

subprojects {
    
    apply plugin: 'java'
    
    java.toolchain.languageVersion = JavaLanguageVersion.of(17)
    java.withSourcesJar()
    java.withJavadocJar()
        
    jar {
        from(rootProject.file("LICENSE")) {
            rename { "${it}_${mod_name}" }
        }
        manifest {
            attributes([
                'Specification-Title'     : mod_name,
                'Specification-Vendor'    : mod_author,
                'Specification-Version'   : project.jar.archiveVersion,
                'Implementation-Title'    : project.name,
                'Implementation-Version'  : project.jar.archiveVersion,
                'Implementation-Vendor'   : mod_author,
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                'Timestamp'               : System.currentTimeMillis(),
                'Built-On-Java'           : "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})",
                'Built-On-Minecraft'      : minecraft_version
            ])
        }
    }

    sourcesJar {
        from(rootProject.file("LICENSE")) {
            rename { "${it}_${mod_name}" }
        }
    }

    repositories {
        maven {
            name = 'Parchment'
            url = 'https://maven.parchmentmc.org'
            content {
                includeGroupAndSubgroups 'org.parchmentmc.data'
            }
        }
        maven {
            name = "Modrinth"
            url = "https://api.modrinth.com/maven"
            content {
                includeGroupAndSubgroups 'maven.modrinth'
            }
        }
        maven {
            name = "CurseMaven"
            url "https://cursemaven.com"
            content {
                includeGroupAndSubgroups 'curse.maven'
            }
        }

        maven {
            name = 'Fabric'
            url = 'https://maven.fabricmc.net/'
            content {
                includeGroupAndSubgroups 'net.fabricmc.fabric-api'
            }
        }
        maven {
            name = "JEI"
            url = "https://maven.blamejared.com/"
            content {
                includeGroupAndSubgroups 'mezz.jei'
            }
        }
        maven {
            name = "Spruce UI"
            url 'https://maven.gegy.dev'
            content {
                includeGroupAndSubgroups 'dev.lambdaurora'
            }
        }
        maven {
            name = "Mod Menu"
            url 'https://maven.terraformersmc.com/releases'
            content {
                includeGroupAndSubgroups 'com.terraformersmc'
            }
        }
        maven {
            name = 'NeoForged'
            url = 'https://maven.neoforged.net/releases'
            content {
                includeGroupAndSubgroups "net.neoforged"
            }
        }
        maven {
            name = 'Mojang and Mixins'
            url = 'https://repo.spongepowered.org/repository/maven-public/'
            content {
                includeGroupAndSubgroups 'com.mojang'
                includeGroupAndSubgroups 'org.spongepowered'
                includeGroupAndSubgroups 'com.google.code.findbugs'
            }
        }
    }

    tasks.withType(JavaCompile).configureEach {
    
        it.options.encoding = 'UTF-8'
        it.options.release = 17
    }

    // Disables Gradle's custom module metadata from being published to maven. The
    // metadata includes mapped dependencies which are not reasonably consumable by
    // other mod developers.
    tasks.withType(GenerateModuleMetadata) {

        enabled = false
    }
}
