plugins {
    id 'fabric-loom' version "${loom_version}" apply(false)
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'signing'

    base {
        archivesName = "${mod_id}-${project.name}-${minecraft_version}"
    }

    // Includes datagenned resources at runtime, disabled for example purposes
//    sourceSets.main.resources.srcDir './src/generated/resources'

    java.toolchain.languageVersion = JavaLanguageVersion.of(21)
    java.withSourcesJar()
    java.withJavadocJar()

    jar {
        from(rootProject.file("LICENSE")) {
            rename { "${it}_${mod_name}" }
        }
        manifest {
            attributes([
                    'Specification-Title'     : mod_name,
                    'Specification-Vendor'    : mod_author,
                    'Specification-Version'   : project.jar.archiveVersion,
                    'Implementation-Title'    : project.name,
                    'Implementation-Version'  : project.jar.archiveVersion,
                    'Implementation-Vendor'   : mod_author,
                    'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                    'Timestamp'               : System.currentTimeMillis(),
                    'Built-On-Java'           : "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})",
                    'Built-On-Minecraft'      : minecraft_version
            ])
        }
    }

    sourcesJar {
        from(rootProject.file("LICENSE")) {
            rename { "${it}_${mod_name}" }
        }
    }

    repositories {
        maven {
            name = 'Parchment'
            url = 'https://maven.parchmentmc.org'
            content {
                includeGroupAndSubgroups 'org.parchmentmc.data'
            }
        }
        maven {
            name = 'Fabric'
            url = 'https://maven.fabricmc.net/'
            content {
                includeGroupAndSubgroups 'net.fabricmc.fabric-api'
            }
        }
        maven {
            name = "Cloth Config"
            url "https://maven.shedaniel.me/"
            content {
                includeGroupAndSubgroups 'me.shedaniel'
                includeGroupAndSubgroups 'dev.architectury'
            }
        }
        maven {
            name = "Mod Menu"
            url 'https://maven.terraformersmc.com/releases'
            content {
                includeGroupAndSubgroups 'com.terraformersmc'
            }
        }
        maven {
            name = "Modrinth"
            url = "https://api.modrinth.com/maven"
            content {
                includeGroupAndSubgroups 'maven.modrinth'
            }
        }
        maven {
            name = 'JEI'
            url = 'https://maven.blamejared.com/'
            content {
                includeGroupAndSubgroups 'mezz.jei'
            }
        }
        maven {
            name = "TommyLib"
            url = "https://dl.cloudsmith.io/public/thomasglasser/tommylib/maven/"
            content {
                includeGroupAndSubgroups 'dev.thomasglasser.tommylib'
            }
        }

        // Non-specific
        maven {
            name = 'NeoForged'
            url = 'https://maven.neoforged.net/releases'
        }
        maven {
            name = 'Mojang and Mixins'
            url = 'https://repo.spongepowered.org/repository/maven-public/'
        }
        mavenLocal()
    }

    processResources {
        var replaceProperties = [
                mod_name: mod_name,
                mod_id: mod_id,
                major_fml_version: major_fml_version,
                version: project.version,
                description: project.description,
                mod_author: mod_author,
                contributors: contributors,
                license: license,
                icon: icon,
                github_name: github_name,
                neoforge_version: neoforge_version,
                fabric_loader_version: fabric_loader_version,
                fabric_version: fabric_version,
                minecraft_version: minecraft_version,
                next_minecraft_version: next_minecraft_version,
                tommylib_version: tommylib_version
        ]
        inputs.properties replaceProperties

        filesMatching(['META-INF/neoforge.mods.toml','fabric.mod.json','**/pack.mcmeta','*.mixins.json']) {
            expand replaceProperties + [project: project]
        }
    }

    // Add the generated resources to the main source set
    // Disabled for example purposes
//    sourceSets.main.resources { srcDir 'src/generated/resources' }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                groupId = project.group
                artifactId = base.archivesName.get()
                version project.version
                from components.java

                pom {
                    name = project.mod_name
                    description = project.description
                    url = "https://github.com/thomasglasser/${github_name}/wiki"
                    licenses {
                        license {
                            name = project.license
                            url = project.license_url
                        }
                    }
                    developers {
                        developer {
                            id = project.mod_author
                            name = project.mod_author
                        }
                    }
                    issueManagement {
                        system = 'GitHub'
                        url = "https://github.com/thomasglasser/${github_name}/issues"
                    }
                    scm
                            {
                                connection = "scm:git:git://github.com/thomasglasser/${github_name}.git"
                                developerConnection = "scm:git:ssh://github.com:thomasglasser/${github_name}.git"
                                url = "https://github.com/thomasglasser/${github_name}/tree/${minecraft_version}"
                            }
                }
            }
        }

        repositories {
            maven {
                name = "Cloudsmith"
                url 'https://maven.cloudsmith.io/thomasglasser/sherdsapi/'
                credentials {
                    username = project.findProperty("CLOUDSMITH_USERNAME") ?: System.getenv("CLOUDSMITH_USERNAME")
                    password = project.findProperty("CLOUDSMITH_API_KEY") ?: System.getenv("CLOUDSMITH_API_KEY")
                }
            }
        }
    }

    signing {
        useGpgCmd()
        sign publishing.publications
    }
}
