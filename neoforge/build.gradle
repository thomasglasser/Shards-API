plugins {
    id 'sherdsapi-loader'
    id 'net.neoforged.moddev' version "${mdg_version}"
}

neoForge {
    version = "${neoforge_version}"

    parchment {
        minecraftVersion = parchment_minecraft_version
        mappingsVersion = parchment_version
    }

    def at = '../common/src/main/resources/META-INF/accesstransformer.cfg'
    if (file(at).exists()) {
        accessTransformers = [at]
    }

    runs {
        client {
            client()
            ideName = "NeoForge Client"
            gameDirectory = project.layout.projectDirectory.dir('runs/client')
        }
        client_alt {
            client()
            ideName = "NeoForge Client 2"
            gameDirectory = project.layout.projectDirectory.dir('runs/client_alt')
            programArguments = ["--username", "DevAlt"]
        }
        server {
            server()
            ideName = "NeoForge Server"
            gameDirectory = project.layout.projectDirectory.dir('runs/server')
        }
        data {
            data()
            ideName = "NeoForge Data Generation"
            gameDirectory = project.layout.projectDirectory.dir('runs/data')
            programArguments.addAll '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
        }
    }

    mods {
        sherdsapi {
            sourceSet sourceSets.main
        }
    }
}

configurations {
    runtimeClasspath.extendsFrom localRuntime
}

dependencies {
    jarJar implementation("dev.thomasglasser.tommylib:tommylib-neoforge-${minecraft_version}:${tommylib_version}")

    // Runtime
    localRuntime "maven.modrinth:jade:${jade_version}+neoforge"
    localRuntime "mezz.jei:jei-${minecraft_version}-neoforge:${jei_version}"
}